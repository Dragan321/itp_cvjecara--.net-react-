name: dockercompose5275659789658622496
services:
  azurite:
    command:
    - azurite
    - --loose
    - --blobHost
    - 0.0.0.0
    - --blobPort
    - "10000"
    - --queueHost
    - 0.0.0.0
    - --queuePort
    - "10001"
    - --location
    - /workspace
    - --debug
    - /workspace/debug.log
    image: mcr.microsoft.com/azure-storage/azurite
    networks:
      default: null
    ports:
    - mode: ingress
      target: 10000
      published: "10010"
      protocol: tcp
    - mode: ingress
      target: 10001
      published: "10011"
      protocol: tcp
    - mode: ingress
      target: 10002
      published: "10012"
      protocol: tcp
    volumes:
    - type: bind
      source: C:\Users\XY\Desktop\cvjecara sa pravim backendom\Cvjecara backend\.containers\azurite
      target: /workspace
      bind:
        create_host_path: true
  cvjecarabackend:
    build:
      context: C:\Users\XY\Desktop\cvjecara sa pravim backendom\Cvjecara backend
      dockerfile: Cvjecara backend/Dockerfile
      labels:
        com.microsoft.created-by: visual-studio
        com.microsoft.visual-studio.project-name: Cvjecara backend
    container_name: Cvjecara_backend
    entrypoint:
    - tail
    - -f
    - /dev/null
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_URLS: https://+:443;http://+:80
    image: cvjecarabackend
    labels:
      com.microsoft.visual-studio.project-name: Cvjecara backend
      com.microsoft.visualstudio.debuggee.arguments: ' --additionalProbingPath /root/.nuget/packages
        --additionalProbingPath /root/.nuget/fallbackpackages  "/app/Cvjecara backend.dll"'
      com.microsoft.visualstudio.debuggee.killprogram: /bin/sh -c "if PID=$$(pidof
        dotnet); then kill $$PID; fi"
      com.microsoft.visualstudio.debuggee.program: dotnet
      com.microsoft.visualstudio.debuggee.workingdirectory: /app
    networks:
      default: null
    ports:
    - mode: ingress
      target: 80
      protocol: tcp
    - mode: ingress
      target: 443
      protocol: tcp
    tty: true
    volumes:
    - type: bind
      source: C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Sdks\Microsoft.Docker.Sdk\tools\TokenService.Proxy\linux-x64\net7.0
      target: /TokenService.Proxy
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\XY\Desktop\cvjecara sa pravim backendom\Cvjecara backend\.containers\logs
      target: /logs
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\XY\vsdbg\vs2017u5
      target: /remote_debugger
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\XY\AppData\Roaming/ASP.NET/Https
      target: /root/.aspnet/https
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\XY\AppData\Roaming/Microsoft/UserSecrets
      target: /root/.microsoft/usersecrets
      read_only: true
      bind:
        create_host_path: true
  db:
    environment:
      POSTGRES_DB: Cvjecara
      POSTGRES_PASSWORD: student2080
      POSTGRES_USER: Dragan
    image: postgres
    networks:
      default: null
    ports:
    - mode: ingress
      target: 5432
      published: "5432"
      protocol: tcp
    restart: always
    volumes:
    - type: bind
      source: C:\Users\XY\Desktop\cvjecara sa pravim backendom\Cvjecara backend\.containers\database
      target: /var/lib/postgresql/data
      bind:
        create_host_path: true
networks:
  default:
    name: dockercompose5275659789658622496_default